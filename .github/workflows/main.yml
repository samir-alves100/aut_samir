name: senai_automacao
run-name: ${{ github.actor }} Pipeline Deploy ðŸš€
on: 
  push:
    branches:
      - "main"
    paths-ignore:
      - "docs/"
      - "images/"
      - "*.md"
      - "*.dockerignore"
jobs:
  githubactions-senai:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: INSTALL PACKAGES
        run: |
          sudo apt update -y
          sudo apt-get install figlet -y
          curl https://static.snyk.io/cli/latest/snyk-linux -o snyk
          chmod +x ./snyk
          mv ./snyk /usr/local/bin/

          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
          wget -O- https://apt.releases.hashicorp.com/gpg | \
            gpg --dearmor | \
            sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null


          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
            https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
            sudo tee /etc/apt/sources.list.d/hashicorp.list
          
          sudo apt update -y
          sudo apt-get install terraform

            
      - name: Snyk Auth
        run: |
          snyk -d auth $SNYK_TOKEN
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_AUTH_TOKEN }}

      - name: AWS CLI - 2
        if: always()
        uses : aws-actions/configure-aws-credentials@v4
        with: 
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secrets-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: DockerLint (CI)
        run: |
          echo "DOCKERLINT" | figlet -f small
          docker run --rm -i hadolint/hadolint < Dockerfile || true
      
      - name: Docker Login
        if: always()
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Docker build (CI)
        if: always()
        run: |
          echo $AWS_ACCESS_KEY_ID
          docker build --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --build-arg AWS_DEFAULT_REGION="us-east-1" -t apicontainer .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Docker Analysis (CI)
        if: always()
        run: |
          echo "VULNERABILIDADES" | figlet -c -f small
          snyk container test apicontainer:latest || true
          
      - name: Docker Push (CD)
        if: always()
        run: |
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c 1-5)
          echo $COMMIT_SHA

          docker tag apicontainer:latest samiralves100/apicontainer:$COMMIT_SHA
          docker push samiralves100/apicontainer:$COMMIT_SHA

      - name: Terraform apply (CD)
        if: always()
        run: |
          COMMIT_SHA=$(echo $GITHUBSHA | cut -c 1-5 )
          terraform init
          terraform apply -va="github_sha=$COMMIT_SHA" --auto-approve
